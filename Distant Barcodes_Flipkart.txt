class Solution {
    public int[] rearrangeBarcodes(int[] arr) {
        HashMap<Integer,Integer> map = new HashMap<>(); 
        for(int a : arr) {
            if(map.containsKey(a)) {
                map.replace(a,map.get(a)+1); 
            }
            else {
                map.put(a,1); 
            }
        }
        ArrayList<ArrayList<Integer>> list = new ArrayList<>(); 
        for(int a : map.keySet()) {
            ArrayList<Integer> lst = new ArrayList<>(); 
            lst.add(map.get(a)); 
            lst.add(a);
            list.add(lst);
        }
        Collections.sort(list,new Comp());  
        System.out.println(list);
        ArrayList<Integer> ans = new ArrayList<>(); 
        for(int i = 0; i<list.get(0).get(0); i++) {
            ans.add(list.get(0).get(1)); 
        }
        int c = 1; 
        int n = ans.size(); 
        for(int j = 1; j<list.size(); j++) {
            for(int i = 0; i<list.get(j).get(0); i++) {
                ans.add(c,list.get(j).get(1)); 
                n++;
                c = (c+2)%n;
            }
        }
        c = 0;
        //System.out.println(ans);
        for(int a : ans) {
            arr[c] = a;
            c++;
        }
        return arr;
    }
    
}
class Comp implements Comparator<ArrayList<Integer>> {
    public int compare(ArrayList<Integer> a, ArrayList<Integer> b) {
        if(a.get(0)>b.get(0)) {
            return -1;
        }
        else if(a.get(0)<b.get(0)) {
            return 1;
        }
        else {
            return 0;
        }
    }
}