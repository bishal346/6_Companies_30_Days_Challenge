class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        int n = nums.length;
        List<Integer> list = new ArrayList<>();
        Arrays.sort(nums);
        int arr[] = new int[n];
        int brr[] = new int[n]; 
        for(int i = 0; i<n; i++) {
            arr[i] = 1;
            brr[i] = -1; 
        }
        int max = 0, in = 0;
        for(int i = 0; i<n; i++) {
            for(int j = 0; j<i; j++) {
                if(nums[i]%nums[j]==0) {
                    if(arr[j]>=arr[i]) {
                        arr[i] = arr[j] + 1;
                        brr[i] = j; 
                    }
                }
                if(arr[i]>max) {
                    max = arr[i]; 
                    in = i;
                }
            }
        }
        while(in!= -1) {
            list.add(0,nums[in]);
            in = brr[in]; 
        }
        return list;
    }
}