class StockPrice {

    TreeMap<Integer,Integer> map = new TreeMap<>(); 
    TreeMap<Integer,Integer> map1 = new TreeMap<>(); 
    int max = 0; 
    public StockPrice() {
        
    }
    
    public void update(int timestamp, int price) {
        int p = -1;
        if(map.containsKey(timestamp)) {
        p = map.get(timestamp); 
        map1.replace(p, map1.get(p)-1); 
        if(map1.get(p)==0) 
            map1.remove(p); 
        }
        if(!map.containsKey(timestamp)) {
            map.put(timestamp,price); 
        }
        else {
            map.replace(timestamp,price);
        }
        if(!map1.containsKey(price)) {
            map1.put(price,1); 
        }
        else {
            map1.replace(price,map1.get(price)+1); 
        }
        max = Math.max(max,timestamp); 
    }
    
    public int current() {
        return map.get(max); 
    }
    
    public int maximum() {
        return map1.lastKey(); 
    }
    
    public int minimum() {
        return map1.firstKey(); 
    }
}

/**
 * Your StockPrice object will be instantiated and called as such:
 * StockPrice obj = new StockPrice();
 * obj.update(timestamp,price);
 * int param_2 = obj.current();
 * int param_3 = obj.maximum();
 * int param_4 = obj.minimum();
 */