class Solution {
    public int swimInWater(int[][] arr) {
        int n = arr.length; 
        int l = 0; 
        int r = n*n; 
        int m = 0; 
        while(l<r) {
            m = (r+l)/2; 
            boolean brr[][] = new boolean[n][n]; 
            trav(brr,0,0,arr,m,n); 
            //System.out.println("HELLO"); 
            if(brr[n-1][n-1]) {
                r = m; 
            }
            else {
                l = m+1; 
            }
        }
        return l; 
    }
    public void trav(boolean brr[][], int i, int j, int arr[][], int a, int n) {
        if(!brr[i][j]&&arr[i][j]<=a) {
            brr[i][j] = true; 
            if(i-1>=0) {
                trav(brr,i-1,j,arr,a,n); 
            }
            if(i+1<n) {
                trav(brr,i+1,j,arr,a,n); 
            }
            if(j-1>=0) {
                trav(brr,i,j-1,arr,a,n); 
            }
            if(j+1<n) {
                trav(brr,i,j+1,arr,a,n); 
            }
        }
    }
}