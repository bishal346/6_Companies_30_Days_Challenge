class Solution {
    public int findMaximizedCapital(int k, int w, int[] profits, int[] capital) {
        PriorityQueue<int[]> queue = new PriorityQueue<>((a,b) -> a[0] - b[0]); 
        PriorityQueue<Integer> que = new PriorityQueue<>((a,b) -> b - a); 
        int n = profits.length; 
        for(int i = 0; i<n; i++) {
            queue.add(new int[]{capital[i], profits[i]}); 
            
        }
        //int w = 0; 
        for(int i = 0; i<k; i++) {
            while(queue.size()!=0&&queue.peek()[0]<=w) {
                que.add(queue.poll()[1]); 
            }
            if(que.size()==0)
                return w; 
            w+=que.poll(); 
        }
        return w; 
    }
}