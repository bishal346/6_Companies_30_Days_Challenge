class Solution {
    public int[][] matrixBlockSum(int[][] mat, int K) {
        int a = 0,n = mat[0].length;
        int[][] ans = new int[mat.length][mat[0].length];
        for(int i = 0; i<mat.length*mat[0].length; i++) {
            a = (int)i/n;
            ans[a][i%n] = mn(a,i%n,K,mat);
        }
        return ans;
    }
    public int mn(int i, int j, int k, int[][] arr){
        int c = 0;
        int a = i, b = j;
        //System.out.println(i+" "+j);
        i = i-k>0?i-k:0; j = j-k>0?j-k:0;
        int i1 = a+k<arr.length?a+k:arr.length-1;
        int j1 = b+k<arr[0].length?b+k:arr[0].length-1;
        //System.out.println("i "+i+" i1 "+i1);
        //System.out.println("j "+j+" j1 "+j1);
        for(int i2 = i; i2<=i1; i2++) {
            for(int j2 = j; j2<=j1; j2++) {
                //System.out.println(arr[i2][j2]);
                c = c + arr[i2][j2];
            }
        }
        return c;
    }
}