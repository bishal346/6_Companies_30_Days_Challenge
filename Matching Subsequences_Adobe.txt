class Solution {
    public int numMatchingSubseq(String s, String[] brr) {
        int n = s.length(); 
        int arr[][] = new int[n][26]; 
        for(int i = 0; i<n; i++) {
            for(int j = 0; j<26; j++) {
                arr[i][j] = -1; 
            }
        }
        HashMap<Character, Integer> map = new HashMap<>(); 
        for(int i = n-2; i>=0; i--) {
            if(!map.containsKey(s.charAt(i))) {
                map.put(s.charAt(i),i); 
            }
            else {
                map.replace(s.charAt(i),i); 
            }
            /*if(i==n-1) {
                arr[i][s.charAt(i)-'a'] = i; 
            }
            else {
                for(int j = 0; j<26; j++) {
                    arr[i][j] = arr[i+1][j]; 
                }
                arr[i][s.charAt(i)-'a'] = i; 
            }*/
            for(int j = 0; j<26; j++) {
                arr[i][j] = arr[i+1][j]; 
            }
            arr[i][s.charAt(i+1)-'a'] = i+1; 
        }
        // for(int i = 0; i<n; i++) {
        //     for(char j = 'a'; j<='e'; j++) {
        //         System.out.print(j+" :- "+arr[i][j-'a']+"    "); 
        //     }
        //     System.out.println(); 
        // }
        int c = -1; 
        boolean f = false; 
        int ans = 0; 
        for(String x : brr) {
            if(!map.containsKey(x.charAt(0)))
                continue; 
            c = map.get(x.charAt(0)); 
            //System.out.println(map); 
            if(c==-1) {
                continue; 
            } 
            f = true; 
            //c = 0; 
            for(int i = 1; i<x.length(); i++) {
                c = arr[c][x.charAt(i)-'a']; 
                if(c==-1) {
                    f = false; 
                    break; 
                }
            }
            ans = f?ans+1:ans; 
        }
        return ans; 
    }
}
